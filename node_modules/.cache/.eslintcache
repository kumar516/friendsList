[{"/home/kumar/jjj/friends-list/src/index.js":"1","/home/kumar/jjj/friends-list/src/App.js":"2","/home/kumar/jjj/friends-list/src/reportWebVitals.js":"3","/home/kumar/jjj/friends-list/src/store.js":"4","/home/kumar/jjj/friends-list/src/components/freiendsList.js":"5","/home/kumar/jjj/friends-list/src/reducers/rootReducer.js":"6","/home/kumar/jjj/friends-list/src/actions/friendsListActions.js":"7","/home/kumar/jjj/friends-list/src/actions/constants.js":"8","/home/kumar/friendList/src/index.js":"9","/home/kumar/friendList/src/App.js":"10","/home/kumar/friendList/src/reportWebVitals.js":"11","/home/kumar/friendList/src/store.js":"12","/home/kumar/friendList/src/components/freiendsList.js":"13","/home/kumar/friendList/src/reducers/rootReducer.js":"14","/home/kumar/friendList/src/actions/friendsListActions.js":"15","/home/kumar/friendList/src/actions/constants.js":"16"},{"size":500,"mtime":1625531333938,"results":"17","hashOfConfig":"18"},{"size":379,"mtime":1625557227131,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1625531333938,"results":"20","hashOfConfig":"18"},{"size":212,"mtime":1625553275801,"results":"21","hashOfConfig":"18"},{"size":23926,"mtime":1625595665487,"results":"22","hashOfConfig":"18"},{"size":274,"mtime":1625556639160,"results":"23","hashOfConfig":"18"},{"size":202,"mtime":1625553476201,"results":"24","hashOfConfig":"18"},{"size":41,"mtime":1625553210973,"results":"25","hashOfConfig":"18"},{"size":500,"mtime":1625531333938,"results":"26","hashOfConfig":"27"},{"size":379,"mtime":1625557227131,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1625531333938,"results":"29","hashOfConfig":"27"},{"size":212,"mtime":1625553275801,"results":"30","hashOfConfig":"27"},{"size":23926,"mtime":1625625465022,"results":"31","hashOfConfig":"27"},{"size":274,"mtime":1625556639160,"results":"32","hashOfConfig":"27"},{"size":202,"mtime":1625553476201,"results":"33","hashOfConfig":"27"},{"size":41,"mtime":1625553210973,"results":"34","hashOfConfig":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e6icz3",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1adsl34",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/kumar/jjj/friends-list/src/index.js",[],"/home/kumar/jjj/friends-list/src/App.js",[],"/home/kumar/jjj/friends-list/src/reportWebVitals.js",[],"/home/kumar/jjj/friends-list/src/store.js",[],"/home/kumar/jjj/friends-list/src/components/freiendsList.js",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"import { useEffect, useState } from \"react\";\nimport \"../css/friendsList.css\";\nimport { connect } from 'react-redux';\nimport { GetFriends } from '../actions/friendsListActions';\n\nconst FriendsList = props => {\n    const [search, setSearch] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [currentpage, setCurrentPage] = useState(1);\n    const [list, setList] = useState([]);\n    const [originalList, setOriginalList] = useState();\n    const [noOfPages, setNoOfPages] = useState();\n    const [favourite, setFavourite] = useState(false);\n    const [totalEntities, setTotalEntities] = useState();\n    const [hightlighted, setHighlighted] = useState(\"\");\n    const [message, setMessage] = useState(\"\")\n    const [status, setStatus] = useState(0)\n    const [deleteStatus, setDeleteStatus] = useState(false)\n    const [deleteId, setDeleteId] = useState()\n\n    useEffect(() => {\n        let friendList = [\n            {\n                name: \"Rahul Gupta\",\n                favourite: true\n            },\n            {\n                name: \"Shivangi Sharma\",\n                favourite: false\n            },\n            {\n                name: \"Akash Singh\",\n                favourite: false\n            },\n            {\n                name: \"Kumar madhu\",\n                favourite: false\n            },\n            {\n                name: \"Karthik N\",\n                favourite: true\n            },\n            {\n                name: \"Anand C haveri\",\n                favourite: true\n            },\n            {\n                name: \"Smriti Mandana\",\n                favourite: false\n            },\n            {\n                name: \"Rahul Dravid\",\n                favourite: false\n            },\n            {\n                name: \"Virat Kohli\",\n                favourite: false\n            },\n            {\n                name: \"Sehwag\",\n                favourite: true\n            },\n            {\n                name: \"Mithali Raj\",\n                favourite: true\n            },\n        ]\n        let newList = friendList.sort(function (a, b) {\n            if (a.name.toLowerCase() < b.name.toLowerCase()) { return -1; }\n            if (a.name.toLowerCase() > b.name.toLowerCase()) { return 1; }\n        })\n        if (newList.length) {\n            props.GetFriends(newList)\n            let pages = newList.length % 4;\n            if (pages > 0) {\n                setNoOfPages(Math.trunc(newList.length / 4) + 1)\n            }\n            else {\n                setNoOfPages(Math.trunc(newList.length / 4))\n            }\n            setOriginalList([...newList])\n            setTotalEntities(newList.length)\n            let array = [...newList]\n            let sortedList = array.splice(0, 4);\n            setList(sortedList)\n        }\n    }, [])\n\n    const onPrev = () => {\n        if (currentpage > 1) {\n            let newList = [...originalList]\n            let curPage = currentpage - 1;\n            let sortedList = newList.splice((curPage * 4) - 4, 4);\n            setList(sortedList)\n            setCurrentPage(curPage)\n        }\n        setHighlighted(\"\")\n        setName(\"\")\n    }\n\n    const onNext = () => {\n        if (currentpage < noOfPages) {\n            let newList = [...originalList]\n            let curPage = currentpage + 1;\n            let sortedList = newList.splice((curPage * 4) - 4, 4);\n            setList(sortedList)\n            setCurrentPage(curPage)\n        }\n        setHighlighted(\"\")\n        setName(\"\")\n    }\n\n    const onFavourite = () => {\n        if (favourite == false) {\n            setFavourite(true);\n            let newList = [...props.friendsList]\n            let favourites = newList.filter(res => res.favourite == true)\n            let pages = favourites.length % 4;\n            if (pages > 0) {\n                setNoOfPages(Math.trunc(favourites.length / 4) + 1)\n            }\n            else {\n                setNoOfPages(Math.trunc(favourites.length / 4))\n            }\n            setOriginalList([...favourites])\n            setTotalEntities(favourites.length)\n            let array = [...favourites]\n            let sortedList = array.splice(0, 4);\n            setList(sortedList);\n            setCurrentPage(1)\n            setHighlighted(\"\")\n            setName(\"\")\n            setSearch(\"\")\n        }\n        else {\n            setFavourite(false);\n            let favourites = [...props.friendsList]\n            let pages = favourites.length % 4;\n            if (pages > 0) {\n                setNoOfPages(Math.trunc(favourites.length / 4) + 1)\n            }\n            else {\n                setNoOfPages(Math.trunc(favourites.length / 4))\n            }\n            setOriginalList([...favourites])\n            setTotalEntities(favourites.length)\n            let array = [...favourites]\n            let sortedList = array.splice(0, 4);\n            setList(sortedList);\n            setCurrentPage(1)\n            setHighlighted(\"\")\n            setName(\"\")\n            setSearch(\"\")\n        }\n    }\n\n    const onNameChange = (e) => {\n        setName(e.target.value)\n        setHighlighted(\"\")\n    }\n\n    const onSearchChange = (e) => {\n        setSearch(e.target.value)\n        setName(\"\")\n        setHighlighted(\"\")\n        let list = [...originalList]\n        let newArray = list.filter(res => res.name.toLowerCase().includes(e.target.value.toLowerCase().replace(/\\s+/g, ' ').trim()))\n        let pages = newArray.length % 4;\n        if (pages > 0) {\n            setNoOfPages(Math.trunc(newArray.length / 4) + 1)\n        }\n        else {\n            setNoOfPages(Math.trunc(newArray.length / 4))\n        }\n        let array = [...newArray]\n        setTotalEntities(newArray.length)\n        let sortedList = array.splice(0, 4);\n        setList(sortedList);\n        setCurrentPage(1)\n    }\n\n    const checkActive = (friend) => {\n        return friend.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim()\n    }\n\n    const handleKeypress = e => {\n        if (e.charCode === 13) {\n            if (name != \"\") {\n                let list = [...props.friendsList];\n                if (list.some(res => res.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim())) {\n                    let index = list.findIndex(checkActive);\n                    setFavourite(false)\n                    setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim())\n                    let pages = index % 4;\n                    if (index == 0) {\n                        setCurrentPage(1)\n                        let sorArray = [...list]\n                        let sortedList = sorArray.splice(index, 4);\n                        setList(sortedList)\n                    }\n                    else if (pages > 0) {\n                        setCurrentPage(Math.trunc((index / 4) + 1))\n                        let sortedList = list.splice(((Math.trunc(index / 4) + 1) * 4) - 4, 4);\n                        setList(sortedList)\n                    }\n                    else {\n                        setCurrentPage(Math.trunc(index / 4))\n                        let sortedList = list.splice(((Math.trunc(index / 4) + 1) * 4) - 4, 4);\n                        setList(sortedList)\n                    }\n                    setName(\"\")\n                    setSearch(\"\")\n                    setMessage(\"This name is already in your Friends List.\")\n                    setStatus(1)\n                    setTimeout(() => {\n                        setMessage(\"\")\n                        setStatus(0)\n                    }, 2000)\n                }\n                else {\n                    let list5 = [...props.friendsList];\n                    setFavourite(false)\n                    setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim())\n                    list5.push({\n                        name: name.toLowerCase().replace(/\\s+/g, ' ').trim(),\n                        favourite: false\n                    })\n                    let newList = list5.sort(function (a, b) {\n                        if (a.name.toLowerCase() < b.name.toLowerCase()) { return -1; }\n                        if (a.name.toLowerCase() > b.name.toLowerCase()) { return 1; }\n                    })\n                    if (newList.length) {\n                        props.GetFriends(newList)\n                        setOriginalList([...newList])\n                        let pages1 = newList.length % 4;\n                        if (pages1 > 0) {\n                            setNoOfPages(Math.trunc(newList.length / 4) + 1)\n                        }\n                        else {\n                            setNoOfPages(Math.trunc(newList.length / 4))\n                        }\n                        setTotalEntities(newList.length)\n                        let array = [...newList]\n                        let index = array.findIndex(checkActive);\n                        let pages = index % 4;\n                        if (index == 0) {\n                            setCurrentPage(1)\n                            let sorArray = [...newList]\n                            let sortedList = sorArray.splice(index, 4);\n                            setList(sortedList)\n                        }\n                        else if (pages > 0) {\n                            let sorArray = [...newList]\n                            setCurrentPage(Math.trunc(index / 4) + 1)\n                            let sortedList = sorArray.splice(Math.trunc(index / 4) * 4, 4);\n                            setList(sortedList)\n                        }\n                        else {\n                            setCurrentPage(Math.trunc(index / 4) + 1)\n                            let sorArray = [...newList]\n                            let sortedList = sorArray.splice(index, 4);\n                            setList(sortedList)\n                        }\n                    }\n                    setName(\"\")\n                    setSearch(\"\")\n                    setMessage(\"New contact added to your friends List.\")\n                    setStatus(2)\n                    setTimeout(() => {\n                        setMessage(\"\")\n                        setStatus(0)\n                    }, 2000)\n                }\n            }\n        }\n    };\n\n    const onAdd = () => {\n        if (name != \"\") {\n            let list = [...props.friendsList];\n            if (list.some(res => res.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim())) {\n                let index = list.findIndex(checkActive);\n                setFavourite(false)\n                setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim())\n                let pages = index % 4;\n                if (index == 0) {\n                    setCurrentPage(1)\n                    let sorArray = [...list]\n                    let sortedList = sorArray.splice(index, 4);\n                    setList(sortedList)\n                }\n                else if (pages > 0) {\n                    setCurrentPage(Math.trunc((index / 4) + 1))\n                    let sortedList = list.splice(((Math.trunc(index / 4) + 1) * 4) - 4, 4);\n                    setList(sortedList)\n                }\n                else {\n                    setCurrentPage(Math.trunc(index / 4))\n                    let sortedList = list.splice(((Math.trunc(index / 4) + 1) * 4) - 4, 4);\n                    setList(sortedList)\n                }\n                setName(\"\")\n                setSearch(\"\")\n                setMessage(\"This name is already in your Friends List.\")\n                setStatus(1)\n                setTimeout(() => {\n                    setMessage(\"\")\n                    setStatus(0)\n                }, 2000)\n            }\n            else {\n                let list5 = [...props.friendsList];\n                setFavourite(false)\n                list5.push({\n                    name: name.toLowerCase().replace(/\\s+/g, ' ').trim(),\n                    favourite: false\n                })\n                setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim())\n                let newList = list5.sort(function (a, b) {\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) { return -1; }\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) { return 1; }\n                })\n                if (newList.length) {\n                    props.GetFriends(newList)\n                    setOriginalList([...newList])\n                    let pages1 = newList.length % 4;\n                        if (pages1 > 0) {\n                            setNoOfPages(Math.trunc(newList.length / 4) + 1)\n                        }\n                        else {\n                            setNoOfPages(Math.trunc(newList.length / 4))\n                        }\n                    setTotalEntities(newList.length)\n                    let array = [...newList]\n                    let index = array.findIndex(checkActive);\n                    let pages = index % 4;\n                    if (index == 0) {\n                        setCurrentPage(1)\n                        let sorArray = [...newList]\n                        let sortedList = sorArray.splice(index, 4);\n                        setList(sortedList)\n                    }\n                    else if (pages > 0) {\n                        let sorArray = [...newList]\n                        setCurrentPage(Math.trunc(index / 4) + 1)\n                        let sortedList = sorArray.splice(Math.trunc(index / 4) * 4, 4);\n                        setList(sortedList)\n                    }\n                    else {\n                        setCurrentPage(Math.trunc(index / 4) + 1)\n                        let sorArray = [...newList]\n                        let sortedList = sorArray.splice(index, 4);\n                        setList(sortedList)\n                    }\n                }\n                setName(\"\")\n                setSearch(\"\")\n                setMessage(\"New contact added to your friends List.\")\n                setStatus(2)\n                setTimeout(() => {\n                    setMessage(\"\")\n                    setStatus(0)\n                }, 2000)\n            }\n        }\n    }\n\n    const onFav = (n) => {\n        let list1 = [...list];\n        let originalList1 = [...originalList];\n        let friendsList1 = [...props.friendsList];\n        for (let i = 0; i < list1.length; i++) {\n            if (list1[i].name.toLowerCase() == n.toLowerCase()) {\n                list1[i].favourite = !list1[i].favourite\n                if (list1[i].favourite == true) {\n                    setMessage(\"Successfully added from your favourites.\")\n                    setStatus(2)\n                    setTimeout(() => {\n                        setMessage(\"\")\n                        setStatus(0)\n                    }, 2000)\n                }\n                else {\n                    setMessage(\"Successfully removed from your favourites.\")\n                    setStatus(1)\n                    setTimeout(() => {\n                        setMessage(\"\")\n                        setStatus(0)\n                    }, 2000)\n                }\n            }\n        }\n        for (let j = 0; j < originalList1.length; j++) {\n            if (originalList1[j].name.toLowerCase() == n.toLowerCase()) {\n                originalList1[j].favourite = !originalList1[j].favourite\n            }\n        }\n        for (let k = 0; k < friendsList1.length; k++) {\n            if (friendsList1[k].name.toLowerCase() == n.toLowerCase()) {\n                friendsList1[k].favourite = !friendsList1[k].favourite\n            }\n        }\n        setHighlighted(\"\")\n        setName(\"\")\n        setList(list1)\n        setOriginalList(originalList1)\n        props.GetFriends(friendsList1)\n    }\n\n    const onDelete = (n) => {\n        setDeleteId(n.toLowerCase())\n        setDeleteStatus(true)\n        setHighlighted(\"\")\n        setName(\"\")\n    }\n\n    const onPageBtn = (n) => {\n        let newList = [...originalList]\n        setCurrentPage(n)\n        let currentList = newList.splice((n * 4) - 4, 4)\n        setList(currentList)\n    }\n\n    const onNo = () => {\n        setDeleteId(\"\")\n        setDeleteStatus(false)\n    }\n\n    const onDeleteSuccess = () => {\n        let n = deleteId;\n        let originalList1 = [...originalList];\n        let friendsList1 = [...props.friendsList];\n        let originalList2 = originalList1.filter(li2 => li2.name.toLowerCase() != n.toLowerCase())\n        let friendsList2 = friendsList1.filter(li3 => li3.name.toLowerCase() != n.toLowerCase())\n        let newList = [...originalList2]\n        setOriginalList(originalList2)\n        props.GetFriends(friendsList2)\n        setTotalEntities(originalList2.length)\n        let pages = originalList2.length % 4;\n        if (pages > 0) {\n            setNoOfPages(Math.trunc(originalList2.length / 4) + 1)\n        }\n        else {\n            setNoOfPages(Math.trunc(originalList2.length / 4))\n        }\n        if (originalList2.length <= (currentpage * 4) - 4) {\n            let newpage = currentpage - 1\n            setCurrentPage(newpage)\n            let sortedList = newList.splice((newpage * 4) - 4, 4);\n            setList(sortedList)\n        }\n        else {\n            let newpage = currentpage;\n            setCurrentPage(newpage)\n            let sortedList = newList.splice((newpage * 4) - 4, 4);\n            setList(sortedList)\n        }\n        setMessage(\"Successfully deleted from your friends List.\")\n        setStatus(2)\n        setTimeout(() => {\n            setMessage(\"\")\n            setStatus(0)\n        }, 2000)\n        setDeleteStatus(false)\n    }\n\n    return (\n        <div className=\"container\">\n            {status != 0 &&\n                <div className={status == 1 ? \"danger alert_message\" : \"success alert_message\"}>\n                    {status == 2 ? <i className=\"fa fa-check-circle\" /> :\n                        <i className=\"fa fa-warning\" />}\n                    <div>{message}</div>\n                </div>}\n            {deleteStatus == true && <div id=\"myModal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <i className=\"fa fa-warning\" />\n                    <div className=\"head\">Are you sure?</div>\n                    <div className=\"sub_txt\">You want to delete <span>{deleteId}</span> from your friend list.</div>\n                    <div className=\"btn_grp\">\n                        <button className=\"remove_btn\" onClick={() => onNo()}>No</button>\n                        <button className=\"ok_btn\" onClick={() => onDeleteSuccess()}>Delete</button>\n                    </div>\n                </div>\n            </div>}\n            <div className=\"list_main_container\">\n                <div className=\"list_heading\">\n                    <div className=\"header\">Friends List</div>\n                    <div className=\"icons_container\">\n                        <div onClick={() => onFavourite()} className={favourite == false ? \"star_icon\" : \"active star_icon\"}>\n                            <div className={favourite == false ? \"inside_star_icon\" : \"active inside_star_icon\"}></div>\n                        </div>\n                        <span className=\"tooltiptext\">favourites</span>\n                    </div>\n                </div>\n                <div className=\"search_container\">\n                    <i className=\"fa fa-search\"></i>\n                    <input type=\"text\" placeholder=\"Search\" value={search || ''} onChange={onSearchChange} />\n                </div>\n                <div className=\"add_friend_container\">\n                    <input type=\"text\" placeholder=\"Enter your friend name\" value={name || ''} onChange={onNameChange} onKeyPress={handleKeypress} />\n                    <button className=\"add_btn\" onClick={() => onAdd()} disabled={name == \"\" ? true : false}>Add</button>\n                </div>\n                {list != undefined ? list.length ?\n                    <div className=\"list_container\">\n                        {list.map((res, i) =>\n                            <div className={hightlighted.toLowerCase() != res.name.toLowerCase() ? \"friend_container\" : \"newAdded friend_container\"} key={i}>\n                                <div className=\"name_container\">\n                                    <div className=\"name\">{res.name.toLowerCase()}</div>\n                                    <div className=\"tag_line\">is you friend</div>\n                                </div>\n                                <div className=\"action_icons_container\">\n                                    <div className=\"fav_icon_container\" onClick={() => onFav(res.name)}>\n                                        <div className={res.favourite == false ? \"star_icon\" : \"active star_icon\"}>\n                                            <div className={res.favourite == false ? \"inside_star_icon\" : \"active inside_star_icon\"}></div>\n                                        </div>\n                                    </div>\n                                    <div className=\"delete_icon_container\" onClick={() => onDelete(res.name)}>\n                                        <i className=\"fa fa-trash\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div> :\n                    <div className=\"no_friend\">No data to dispaly.</div>:null\n                }\n            </div>\n            {originalList != undefined && originalList.length >3 &&\n                <div className=\"pagination_container\">\n                    <div className=\"pagination_txt\">\n                        Showing {currentpage * 4 - 3} to {currentpage * 4 > totalEntities ? totalEntities : currentpage * 4} of {totalEntities} entries\n                    </div>\n                    <div className=\"pagination_btns\">\n                        <div className={currentpage == 1 ? \"deactive pagination_btn\" : \"pagination_btn\"} onClick={() => onPrev()}>{\"< Prev\"}</div>\n                        {currentpage == 1 ?\n                            <div className=\"pagination_numbers\">\n                                <div className=\"active page_number\" onClick={() => onPageBtn(1)}>1</div>\n                                {noOfPages > 1 && <div className=\"page_number\" onClick={() => onPageBtn(2)}>2</div>}\n                                {noOfPages > 2 && <div className=\"page_number\" onClick={() => onPageBtn(3)}>3</div>}\n                            </div> :\n                            currentpage == noOfPages ?\n                                <div className=\"pagination_numbers\">\n                                    {(noOfPages - 2) > 0 && <div className=\"page_number\" onClick={() => onPageBtn(noOfPages - 2)}>{noOfPages - 2}</div>}\n                                    {(noOfPages - 1) > 0 && <div className=\"page_number\" onClick={() => onPageBtn(noOfPages - 1)}>{noOfPages - 1}</div>}\n                                    <div className=\"active page_number\" onClick={() => onPageBtn(noOfPages)}>{noOfPages}</div>\n                                </div> :\n                                <div className=\"pagination_numbers\">\n                                    <div className=\"page_number\" onClick={() => onPageBtn(currentpage - 1)}>{currentpage - 1}</div>\n                                    <div className=\"active page_number\" onClick={() => onPageBtn(currentpage)}>{currentpage}</div>\n                                    <div className=\"page_number\" onClick={() => onPageBtn(currentpage + 1)}>{currentpage + 1}</div>\n                                </div>}\n                        <div className={noOfPages == currentpage ? \"deactive pagination_btn\" : \"pagination_btn\"} onClick={() => onNext()}>{\"Next >\"}</div>\n                    </div>\n                </div>}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    friendsList: state.friendsList\n})\n\nconst mapDispatchToProps = dispatch => ({\n    GetFriends: (data) => dispatch(GetFriends(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsList);\n","/home/kumar/jjj/friends-list/src/reducers/rootReducer.js",[],"/home/kumar/jjj/friends-list/src/actions/friendsListActions.js",[],"/home/kumar/jjj/friends-list/src/actions/constants.js",[],"/home/kumar/friendList/src/index.js",[],"/home/kumar/friendList/src/App.js",[],"/home/kumar/friendList/src/reportWebVitals.js",[],"/home/kumar/friendList/src/store.js",[],"/home/kumar/friendList/src/components/freiendsList.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141"],"/home/kumar/friendList/src/reducers/rootReducer.js",[],"/home/kumar/friendList/src/actions/friendsListActions.js",[],"/home/kumar/friendList/src/actions/constants.js",[],{"ruleId":"142","severity":1,"message":"143","line":68,"column":39,"nodeType":"144","messageId":"145","endLine":68,"endColumn":48},{"ruleId":"146","severity":1,"message":"147","line":87,"column":8,"nodeType":"148","endLine":87,"endColumn":10,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":114,"column":23,"nodeType":"152","messageId":"153","endLine":114,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":117,"column":66,"nodeType":"152","messageId":"153","endLine":117,"endColumn":68},{"ruleId":"150","severity":1,"message":"151","line":183,"column":42,"nodeType":"152","messageId":"153","endLine":183,"endColumn":44},{"ruleId":"150","severity":1,"message":"154","line":188,"column":22,"nodeType":"152","messageId":"153","endLine":188,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":190,"column":61,"nodeType":"152","messageId":"153","endLine":190,"endColumn":63},{"ruleId":"150","severity":1,"message":"151","line":195,"column":31,"nodeType":"152","messageId":"153","endLine":195,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":228,"column":46,"nodeType":"144","messageId":"145","endLine":228,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":246,"column":35,"nodeType":"152","messageId":"153","endLine":246,"endColumn":37},{"ruleId":"150","severity":1,"message":"154","line":279,"column":18,"nodeType":"152","messageId":"153","endLine":279,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":281,"column":57,"nodeType":"152","messageId":"153","endLine":281,"endColumn":59},{"ruleId":"150","severity":1,"message":"151","line":286,"column":27,"nodeType":"152","messageId":"153","endLine":286,"endColumn":29},{"ruleId":"142","severity":1,"message":"143","line":319,"column":42,"nodeType":"144","messageId":"145","endLine":319,"endColumn":51},{"ruleId":"150","severity":1,"message":"151","line":337,"column":31,"nodeType":"152","messageId":"153","endLine":337,"endColumn":33},{"ruleId":"150","severity":1,"message":"151","line":373,"column":45,"nodeType":"152","messageId":"153","endLine":373,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":375,"column":40,"nodeType":"152","messageId":"153","endLine":375,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":394,"column":53,"nodeType":"152","messageId":"153","endLine":394,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":399,"column":52,"nodeType":"152","messageId":"153","endLine":399,"endColumn":54},{"ruleId":"150","severity":1,"message":"154","line":433,"column":80,"nodeType":"152","messageId":"153","endLine":433,"endColumn":82},{"ruleId":"150","severity":1,"message":"154","line":434,"column":78,"nodeType":"152","messageId":"153","endLine":434,"endColumn":80},{"ruleId":"150","severity":1,"message":"154","line":469,"column":21,"nodeType":"152","messageId":"153","endLine":469,"endColumn":23},{"ruleId":"150","severity":1,"message":"151","line":470,"column":40,"nodeType":"152","messageId":"153","endLine":470,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":471,"column":29,"nodeType":"152","messageId":"153","endLine":471,"endColumn":31},{"ruleId":"150","severity":1,"message":"151","line":475,"column":27,"nodeType":"152","messageId":"153","endLine":475,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":490,"column":81,"nodeType":"152","messageId":"153","endLine":490,"endColumn":83},{"ruleId":"150","severity":1,"message":"151","line":491,"column":55,"nodeType":"152","messageId":"153","endLine":491,"endColumn":57},{"ruleId":"150","severity":1,"message":"151","line":502,"column":88,"nodeType":"152","messageId":"153","endLine":502,"endColumn":90},{"ruleId":"150","severity":1,"message":"154","line":504,"column":23,"nodeType":"152","messageId":"153","endLine":504,"endColumn":25},{"ruleId":"150","severity":1,"message":"154","line":507,"column":72,"nodeType":"152","messageId":"153","endLine":507,"endColumn":74},{"ruleId":"150","severity":1,"message":"151","line":514,"column":71,"nodeType":"152","messageId":"153","endLine":514,"endColumn":73},{"ruleId":"150","severity":1,"message":"151","line":515,"column":75,"nodeType":"152","messageId":"153","endLine":515,"endColumn":77},{"ruleId":"150","severity":1,"message":"154","line":528,"column":27,"nodeType":"152","messageId":"153","endLine":528,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":534,"column":53,"nodeType":"152","messageId":"153","endLine":534,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":535,"column":38,"nodeType":"152","messageId":"153","endLine":535,"endColumn":40},{"ruleId":"150","severity":1,"message":"151","line":541,"column":41,"nodeType":"152","messageId":"153","endLine":541,"endColumn":43},{"ruleId":"150","severity":1,"message":"151","line":552,"column":51,"nodeType":"152","messageId":"153","endLine":552,"endColumn":53},{"ruleId":"142","severity":1,"message":"143","line":68,"column":39,"nodeType":"144","messageId":"145","endLine":68,"endColumn":48},{"ruleId":"146","severity":1,"message":"147","line":87,"column":8,"nodeType":"148","endLine":87,"endColumn":10,"suggestions":"155"},{"ruleId":"150","severity":1,"message":"151","line":114,"column":23,"nodeType":"152","messageId":"153","endLine":114,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":117,"column":66,"nodeType":"152","messageId":"153","endLine":117,"endColumn":68},{"ruleId":"150","severity":1,"message":"151","line":183,"column":42,"nodeType":"152","messageId":"153","endLine":183,"endColumn":44},{"ruleId":"150","severity":1,"message":"154","line":188,"column":22,"nodeType":"152","messageId":"153","endLine":188,"endColumn":24},{"ruleId":"150","severity":1,"message":"151","line":190,"column":61,"nodeType":"152","messageId":"153","endLine":190,"endColumn":63},{"ruleId":"150","severity":1,"message":"151","line":195,"column":31,"nodeType":"152","messageId":"153","endLine":195,"endColumn":33},{"ruleId":"142","severity":1,"message":"143","line":228,"column":46,"nodeType":"144","messageId":"145","endLine":228,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":246,"column":35,"nodeType":"152","messageId":"153","endLine":246,"endColumn":37},{"ruleId":"150","severity":1,"message":"154","line":279,"column":18,"nodeType":"152","messageId":"153","endLine":279,"endColumn":20},{"ruleId":"150","severity":1,"message":"151","line":281,"column":57,"nodeType":"152","messageId":"153","endLine":281,"endColumn":59},{"ruleId":"150","severity":1,"message":"151","line":286,"column":27,"nodeType":"152","messageId":"153","endLine":286,"endColumn":29},{"ruleId":"142","severity":1,"message":"143","line":319,"column":42,"nodeType":"144","messageId":"145","endLine":319,"endColumn":51},{"ruleId":"150","severity":1,"message":"151","line":337,"column":31,"nodeType":"152","messageId":"153","endLine":337,"endColumn":33},{"ruleId":"150","severity":1,"message":"151","line":373,"column":45,"nodeType":"152","messageId":"153","endLine":373,"endColumn":47},{"ruleId":"150","severity":1,"message":"151","line":375,"column":40,"nodeType":"152","messageId":"153","endLine":375,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":394,"column":53,"nodeType":"152","messageId":"153","endLine":394,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":399,"column":52,"nodeType":"152","messageId":"153","endLine":399,"endColumn":54},{"ruleId":"150","severity":1,"message":"154","line":433,"column":80,"nodeType":"152","messageId":"153","endLine":433,"endColumn":82},{"ruleId":"150","severity":1,"message":"154","line":434,"column":78,"nodeType":"152","messageId":"153","endLine":434,"endColumn":80},{"ruleId":"150","severity":1,"message":"154","line":469,"column":21,"nodeType":"152","messageId":"153","endLine":469,"endColumn":23},{"ruleId":"150","severity":1,"message":"151","line":470,"column":40,"nodeType":"152","messageId":"153","endLine":470,"endColumn":42},{"ruleId":"150","severity":1,"message":"151","line":471,"column":29,"nodeType":"152","messageId":"153","endLine":471,"endColumn":31},{"ruleId":"150","severity":1,"message":"151","line":475,"column":27,"nodeType":"152","messageId":"153","endLine":475,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":490,"column":81,"nodeType":"152","messageId":"153","endLine":490,"endColumn":83},{"ruleId":"150","severity":1,"message":"151","line":491,"column":55,"nodeType":"152","messageId":"153","endLine":491,"endColumn":57},{"ruleId":"150","severity":1,"message":"151","line":502,"column":88,"nodeType":"152","messageId":"153","endLine":502,"endColumn":90},{"ruleId":"150","severity":1,"message":"154","line":504,"column":23,"nodeType":"152","messageId":"153","endLine":504,"endColumn":25},{"ruleId":"150","severity":1,"message":"154","line":507,"column":72,"nodeType":"152","messageId":"153","endLine":507,"endColumn":74},{"ruleId":"150","severity":1,"message":"151","line":514,"column":71,"nodeType":"152","messageId":"153","endLine":514,"endColumn":73},{"ruleId":"150","severity":1,"message":"151","line":515,"column":75,"nodeType":"152","messageId":"153","endLine":515,"endColumn":77},{"ruleId":"150","severity":1,"message":"154","line":528,"column":27,"nodeType":"152","messageId":"153","endLine":528,"endColumn":29},{"ruleId":"150","severity":1,"message":"151","line":534,"column":53,"nodeType":"152","messageId":"153","endLine":534,"endColumn":55},{"ruleId":"150","severity":1,"message":"151","line":535,"column":38,"nodeType":"152","messageId":"153","endLine":535,"endColumn":40},{"ruleId":"150","severity":1,"message":"151","line":541,"column":41,"nodeType":"152","messageId":"153","endLine":541,"endColumn":43},{"ruleId":"150","severity":1,"message":"151","line":552,"column":51,"nodeType":"152","messageId":"153","endLine":552,"endColumn":53},"array-callback-return","Array.prototype.sort() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["156"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.",["157"],{"desc":"158","fix":"159"},{"desc":"158","fix":"160"},"Update the dependencies array to be: [props]",{"range":"161","text":"162"},{"range":"163","text":"162"},[2770,2772],"[props]",[2770,2772]]