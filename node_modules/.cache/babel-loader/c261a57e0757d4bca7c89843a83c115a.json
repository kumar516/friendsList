{"ast":null,"code":"var _jsxFileName = \"/home/kumar/friendList/src/components/freiendsList.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport \"../css/friendsList.css\";\nimport { connect } from 'react-redux';\nimport { GetFriends } from '../actions/friendsListActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendsList = props => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [currentpage, setCurrentPage] = useState(1);\n  const [list, setList] = useState([]);\n  const [originalList, setOriginalList] = useState();\n  const [noOfPages, setNoOfPages] = useState();\n  const [favourite, setFavourite] = useState(false);\n  const [totalEntities, setTotalEntities] = useState();\n  const [hightlighted, setHighlighted] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [status, setStatus] = useState(0);\n  const [deleteStatus, setDeleteStatus] = useState(false);\n  const [deleteId, setDeleteId] = useState();\n  useEffect(() => {\n    let friendList = [{\n      name: \"Rahul Gupta\",\n      favourite: true\n    }, {\n      name: \"Shivangi Sharma\",\n      favourite: false\n    }, {\n      name: \"Akash Singh\",\n      favourite: false\n    }, {\n      name: \"Kumar madhu\",\n      favourite: false\n    }, {\n      name: \"Karthik N\",\n      favourite: true\n    }, {\n      name: \"Anand C haveri\",\n      favourite: true\n    }, {\n      name: \"Smriti Mandana\",\n      favourite: false\n    }, {\n      name: \"Rahul Dravid\",\n      favourite: false\n    }, {\n      name: \"Virat Kohli\",\n      favourite: false\n    }, {\n      name: \"Sehwag\",\n      favourite: true\n    }, {\n      name: \"Mithali Raj\",\n      favourite: true\n    }];\n    let newList = friendList.sort(function (a, b) {\n      if (a.name.toLowerCase() < b.name.toLowerCase()) {\n        return -1;\n      }\n\n      if (a.name.toLowerCase() > b.name.toLowerCase()) {\n        return 1;\n      }\n    });\n\n    if (newList.length) {\n      props.GetFriends(newList);\n      let pages = newList.length % 4;\n\n      if (pages > 0) {\n        setNoOfPages(Math.trunc(newList.length / 4) + 1);\n      } else {\n        setNoOfPages(Math.trunc(newList.length / 4));\n      }\n\n      setOriginalList([...newList]);\n      setTotalEntities(newList.length);\n      let array = [...newList];\n      let sortedList = array.splice(0, 4);\n      setList(sortedList);\n    }\n  }, []);\n\n  const onPrev = () => {\n    if (currentpage > 1) {\n      let newList = [...originalList];\n      let curPage = currentpage - 1;\n      let sortedList = newList.splice(curPage * 4 - 4, 4);\n      setList(sortedList);\n      setCurrentPage(curPage);\n    }\n\n    setHighlighted(\"\");\n    setName(\"\");\n  };\n\n  const onNext = () => {\n    if (currentpage < noOfPages) {\n      let newList = [...originalList];\n      let curPage = currentpage + 1;\n      let sortedList = newList.splice(curPage * 4 - 4, 4);\n      setList(sortedList);\n      setCurrentPage(curPage);\n    }\n\n    setHighlighted(\"\");\n    setName(\"\");\n  };\n\n  const onFavourite = () => {\n    if (favourite == false) {\n      setFavourite(true);\n      let newList = [...props.friendsList];\n      let favourites = newList.filter(res => res.favourite == true);\n      let pages = favourites.length % 4;\n\n      if (pages > 0) {\n        setNoOfPages(Math.trunc(favourites.length / 4) + 1);\n      } else {\n        setNoOfPages(Math.trunc(favourites.length / 4));\n      }\n\n      setOriginalList([...favourites]);\n      setTotalEntities(favourites.length);\n      let array = [...favourites];\n      let sortedList = array.splice(0, 4);\n      setList(sortedList);\n      setCurrentPage(1);\n      setHighlighted(\"\");\n      setName(\"\");\n      setSearch(\"\");\n    } else {\n      setFavourite(false);\n      let favourites = [...props.friendsList];\n      let pages = favourites.length % 4;\n\n      if (pages > 0) {\n        setNoOfPages(Math.trunc(favourites.length / 4) + 1);\n      } else {\n        setNoOfPages(Math.trunc(favourites.length / 4));\n      }\n\n      setOriginalList([...favourites]);\n      setTotalEntities(favourites.length);\n      let array = [...favourites];\n      let sortedList = array.splice(0, 4);\n      setList(sortedList);\n      setCurrentPage(1);\n      setHighlighted(\"\");\n      setName(\"\");\n      setSearch(\"\");\n    }\n  };\n\n  const onNameChange = e => {\n    setName(e.target.value);\n    setHighlighted(\"\");\n  };\n\n  const onSearchChange = e => {\n    setSearch(e.target.value);\n    setName(\"\");\n    setHighlighted(\"\");\n    let list = [...originalList];\n    let newArray = list.filter(res => res.name.toLowerCase().includes(e.target.value.toLowerCase().replace(/\\s+/g, ' ').trim()));\n    let pages = newArray.length % 4;\n\n    if (pages > 0) {\n      setNoOfPages(Math.trunc(newArray.length / 4) + 1);\n    } else {\n      setNoOfPages(Math.trunc(newArray.length / 4));\n    }\n\n    let array = [...newArray];\n    setTotalEntities(newArray.length);\n    let sortedList = array.splice(0, 4);\n    setList(sortedList);\n    setCurrentPage(1);\n  };\n\n  const checkActive = friend => {\n    return friend.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim();\n  };\n\n  const handleKeypress = e => {\n    if (e.charCode === 13) {\n      if (name != \"\") {\n        let list = [...props.friendsList];\n\n        if (list.some(res => res.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim())) {\n          let index = list.findIndex(checkActive);\n          setFavourite(false);\n          setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim());\n          let pages = index % 4;\n\n          if (index == 0) {\n            setCurrentPage(1);\n            let sorArray = [...list];\n            let sortedList = sorArray.splice(index, 4);\n            setList(sortedList);\n          } else if (pages > 0) {\n            setCurrentPage(Math.trunc(index / 4 + 1));\n            let sortedList = list.splice((Math.trunc(index / 4) + 1) * 4 - 4, 4);\n            setList(sortedList);\n          } else {\n            setCurrentPage(Math.trunc(index / 4));\n            let sortedList = list.splice((Math.trunc(index / 4) + 1) * 4 - 4, 4);\n            setList(sortedList);\n          }\n\n          setName(\"\");\n          setSearch(\"\");\n          setMessage(\"This name is already in your Friends List.\");\n          setStatus(1);\n          setTimeout(() => {\n            setMessage(\"\");\n            setStatus(0);\n          }, 2000);\n        } else {\n          let list5 = [...props.friendsList];\n          setFavourite(false);\n          setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim());\n          list5.push({\n            name: name.toLowerCase().replace(/\\s+/g, ' ').trim(),\n            favourite: false\n          });\n          let newList = list5.sort(function (a, b) {\n            if (a.name.toLowerCase() < b.name.toLowerCase()) {\n              return -1;\n            }\n\n            if (a.name.toLowerCase() > b.name.toLowerCase()) {\n              return 1;\n            }\n          });\n\n          if (newList.length) {\n            props.GetFriends(newList);\n            setOriginalList([...newList]);\n            let pages1 = newList.length % 4;\n\n            if (pages1 > 0) {\n              setNoOfPages(Math.trunc(newList.length / 4) + 1);\n            } else {\n              setNoOfPages(Math.trunc(newList.length / 4));\n            }\n\n            setTotalEntities(newList.length);\n            let array = [...newList];\n            let index = array.findIndex(checkActive);\n            let pages = index % 4;\n\n            if (index == 0) {\n              setCurrentPage(1);\n              let sorArray = [...newList];\n              let sortedList = sorArray.splice(index, 4);\n              setList(sortedList);\n            } else if (pages > 0) {\n              let sorArray = [...newList];\n              setCurrentPage(Math.trunc(index / 4) + 1);\n              let sortedList = sorArray.splice(Math.trunc(index / 4) * 4, 4);\n              setList(sortedList);\n            } else {\n              setCurrentPage(Math.trunc(index / 4) + 1);\n              let sorArray = [...newList];\n              let sortedList = sorArray.splice(index, 4);\n              setList(sortedList);\n            }\n          }\n\n          setName(\"\");\n          setSearch(\"\");\n          setMessage(\"New contact added to your friends List.\");\n          setStatus(2);\n          setTimeout(() => {\n            setMessage(\"\");\n            setStatus(0);\n          }, 2000);\n        }\n      }\n    }\n  };\n\n  const onAdd = () => {\n    if (name != \"\") {\n      let list = [...props.friendsList];\n\n      if (list.some(res => res.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim())) {\n        let index = list.findIndex(checkActive);\n        setFavourite(false);\n        setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim());\n        let pages = index % 4;\n\n        if (index == 0) {\n          setCurrentPage(1);\n          let sorArray = [...list];\n          let sortedList = sorArray.splice(index, 4);\n          setList(sortedList);\n        } else if (pages > 0) {\n          setCurrentPage(Math.trunc(index / 4 + 1));\n          let sortedList = list.splice((Math.trunc(index / 4) + 1) * 4 - 4, 4);\n          setList(sortedList);\n        } else {\n          setCurrentPage(Math.trunc(index / 4));\n          let sortedList = list.splice((Math.trunc(index / 4) + 1) * 4 - 4, 4);\n          setList(sortedList);\n        }\n\n        setName(\"\");\n        setSearch(\"\");\n        setMessage(\"This name is already in your Friends List.\");\n        setStatus(1);\n        setTimeout(() => {\n          setMessage(\"\");\n          setStatus(0);\n        }, 2000);\n      } else {\n        let list5 = [...props.friendsList];\n        setFavourite(false);\n        list5.push({\n          name: name.toLowerCase().replace(/\\s+/g, ' ').trim(),\n          favourite: false\n        });\n        setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim());\n        let newList = list5.sort(function (a, b) {\n          if (a.name.toLowerCase() < b.name.toLowerCase()) {\n            return -1;\n          }\n\n          if (a.name.toLowerCase() > b.name.toLowerCase()) {\n            return 1;\n          }\n        });\n\n        if (newList.length) {\n          props.GetFriends(newList);\n          setOriginalList([...newList]);\n          let pages1 = newList.length % 4;\n\n          if (pages1 > 0) {\n            setNoOfPages(Math.trunc(newList.length / 4) + 1);\n          } else {\n            setNoOfPages(Math.trunc(newList.length / 4));\n          }\n\n          setTotalEntities(newList.length);\n          let array = [...newList];\n          let index = array.findIndex(checkActive);\n          let pages = index % 4;\n\n          if (index == 0) {\n            setCurrentPage(1);\n            let sorArray = [...newList];\n            let sortedList = sorArray.splice(index, 4);\n            setList(sortedList);\n          } else if (pages > 0) {\n            let sorArray = [...newList];\n            setCurrentPage(Math.trunc(index / 4) + 1);\n            let sortedList = sorArray.splice(Math.trunc(index / 4) * 4, 4);\n            setList(sortedList);\n          } else {\n            setCurrentPage(Math.trunc(index / 4) + 1);\n            let sorArray = [...newList];\n            let sortedList = sorArray.splice(index, 4);\n            setList(sortedList);\n          }\n        }\n\n        setName(\"\");\n        setSearch(\"\");\n        setMessage(\"New contact added to your friends List.\");\n        setStatus(2);\n        setTimeout(() => {\n          setMessage(\"\");\n          setStatus(0);\n        }, 2000);\n      }\n    }\n  };\n\n  const onFav = n => {\n    let list1 = [...list];\n    let originalList1 = [...originalList];\n    let friendsList1 = [...props.friendsList];\n\n    for (let i = 0; i < list1.length; i++) {\n      if (list1[i].name.toLowerCase() == n.toLowerCase()) {\n        list1[i].favourite = !list1[i].favourite;\n\n        if (list1[i].favourite == true) {\n          setMessage(\"Successfully added from your favourites.\");\n          setStatus(2);\n          setTimeout(() => {\n            setMessage(\"\");\n            setStatus(0);\n          }, 2000);\n        } else {\n          setMessage(\"Successfully removed from your favourites.\");\n          setStatus(1);\n          setTimeout(() => {\n            setMessage(\"\");\n            setStatus(0);\n          }, 2000);\n        }\n      }\n    }\n\n    for (let j = 0; j < originalList1.length; j++) {\n      if (originalList1[j].name.toLowerCase() == n.toLowerCase()) {\n        originalList1[j].favourite = !originalList1[j].favourite;\n      }\n    }\n\n    for (let k = 0; k < friendsList1.length; k++) {\n      if (friendsList1[k].name.toLowerCase() == n.toLowerCase()) {\n        friendsList1[k].favourite = !friendsList1[k].favourite;\n      }\n    }\n\n    setHighlighted(\"\");\n    setName(\"\");\n    setList(list1);\n    setOriginalList(originalList1);\n    props.GetFriends(friendsList1);\n  };\n\n  const onDelete = n => {\n    setDeleteId(n.toLowerCase());\n    setDeleteStatus(true);\n    setHighlighted(\"\");\n    setName(\"\");\n  };\n\n  const onPageBtn = n => {\n    let newList = [...originalList];\n    setCurrentPage(n);\n    let currentList = newList.splice(n * 4 - 4, 4);\n    setList(currentList);\n  };\n\n  const onNo = () => {\n    setDeleteId(\"\");\n    setDeleteStatus(false);\n  };\n\n  const onDeleteSuccess = () => {\n    let n = deleteId;\n    let originalList1 = [...originalList];\n    let friendsList1 = [...props.friendsList];\n    let originalList2 = originalList1.filter(li2 => li2.name.toLowerCase() != n.toLowerCase());\n    let friendsList2 = friendsList1.filter(li3 => li3.name.toLowerCase() != n.toLowerCase());\n    let newList = [...originalList2];\n    setOriginalList(originalList2);\n    props.GetFriends(friendsList2);\n    setTotalEntities(originalList2.length);\n    let pages = originalList2.length % 4;\n\n    if (pages > 0) {\n      setNoOfPages(Math.trunc(originalList2.length / 4) + 1);\n    } else {\n      setNoOfPages(Math.trunc(originalList2.length / 4));\n    }\n\n    if (originalList2.length <= currentpage * 4 - 4) {\n      let newpage = currentpage - 1;\n      setCurrentPage(newpage);\n      let sortedList = newList.splice(newpage * 4 - 4, 4);\n      setList(sortedList);\n    } else {\n      let newpage = currentpage;\n      setCurrentPage(newpage);\n      let sortedList = newList.splice(newpage * 4 - 4, 4);\n      setList(sortedList);\n    }\n\n    setMessage(\"Successfully deleted from your friends List.\");\n    setStatus(2);\n    setTimeout(() => {\n      setMessage(\"\");\n      setStatus(0);\n    }, 2000);\n    setDeleteStatus(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [status != 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: status == 1 ? \"danger alert_message\" : \"success alert_message\",\n      children: [status == 2 ? /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-check-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 36\n      }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa fa-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 17\n    }, this), deleteStatus == true && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"myModal\",\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-warning\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"head\",\n          children: \"Are you sure?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sub_txt\",\n          children: [\"You want to delete \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: deleteId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 65\n          }, this), \" from your friend list.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn_grp\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"remove_btn\",\n            onClick: () => onNo(),\n            children: \"No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ok_btn\",\n            onClick: () => onDeleteSuccess(),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list_main_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_heading\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header\",\n          children: \"Friends List\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icons_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => onFavourite(),\n            className: favourite == false ? \"star_icon\" : \"active star_icon\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: favourite == false ? \"inside_star_icon\" : \"active inside_star_icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltiptext\",\n            children: \"favourites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search\",\n          value: search || '',\n          onChange: onSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add_friend_container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter your friend name\",\n          value: name || '',\n          onChange: onNameChange,\n          onKeyPress: handleKeypress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"add_btn\",\n          onClick: () => onAdd(),\n          disabled: name == \"\" ? true : false,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }, this), list != undefined ? list.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list_container\",\n        children: list.map((res, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: hightlighted.toLowerCase() != res.name.toLowerCase() ? \"friend_container\" : \"newAdded friend_container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"name_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"name\",\n              children: res.name.toLowerCase()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"tag_line\",\n              children: \"is you friend\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 510,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"action_icons_container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"fav_icon_container\",\n              onClick: () => onFav(res.name),\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: res.favourite == false ? \"star_icon\" : \"active star_icon\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: res.favourite == false ? \"inside_star_icon\" : \"active inside_star_icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"delete_icon_container\",\n              onClick: () => onDelete(res.name),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 518,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 33\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"no_friend\",\n        children: \"No data to dispaly.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 21\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 13\n    }, this), originalList != undefined && originalList.length > 3 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination_txt\",\n        children: [\"Showing \", currentpage * 4 - 3, \" to \", currentpage * 4 > totalEntities ? totalEntities : currentpage * 4, \" of \", totalEntities, \" entries\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination_btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: currentpage == 1 ? \"deactive pagination_btn\" : \"pagination_btn\",\n          onClick: () => onPrev(),\n          children: \"< Prev\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 534,\n          columnNumber: 25\n        }, this), currentpage == 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination_numbers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active page_number\",\n            onClick: () => onPageBtn(1),\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 537,\n            columnNumber: 33\n          }, this), noOfPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page_number\",\n            onClick: () => onPageBtn(2),\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 51\n          }, this), noOfPages > 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page_number\",\n            onClick: () => onPageBtn(3),\n            children: \"3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 29\n        }, this) : currentpage == noOfPages ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination_numbers\",\n          children: [noOfPages - 2 > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page_number\",\n            onClick: () => onPageBtn(noOfPages - 2),\n            children: noOfPages - 2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 61\n          }, this), noOfPages - 1 > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page_number\",\n            onClick: () => onPageBtn(noOfPages - 1),\n            children: noOfPages - 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active page_number\",\n            onClick: () => onPageBtn(noOfPages),\n            children: noOfPages\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 545,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 33\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination_numbers\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page_number\",\n            onClick: () => onPageBtn(currentpage - 1),\n            children: currentpage - 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"active page_number\",\n            onClick: () => onPageBtn(currentpage),\n            children: currentpage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"page_number\",\n            onClick: () => onPageBtn(currentpage + 1),\n            children: currentpage + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: noOfPages == currentpage ? \"deactive pagination_btn\" : \"pagination_btn\",\n          onClick: () => onNext(),\n          children: \"Next >\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 468,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FriendsList, \"WxvSOCnbQ8MvnMKwgBrGYlUgi70=\");\n\n_c = FriendsList;\n\nconst mapStateToProps = state => ({\n  friendsList: state.friendsList\n});\n\nconst mapDispatchToProps = dispatch => ({\n  GetFriends: data => dispatch(GetFriends(data))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsList);\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendsList\");","map":{"version":3,"sources":["/home/kumar/friendList/src/components/freiendsList.js"],"names":["useEffect","useState","connect","GetFriends","FriendsList","props","search","setSearch","name","setName","currentpage","setCurrentPage","list","setList","originalList","setOriginalList","noOfPages","setNoOfPages","favourite","setFavourite","totalEntities","setTotalEntities","hightlighted","setHighlighted","message","setMessage","status","setStatus","deleteStatus","setDeleteStatus","deleteId","setDeleteId","friendList","newList","sort","a","b","toLowerCase","length","pages","Math","trunc","array","sortedList","splice","onPrev","curPage","onNext","onFavourite","friendsList","favourites","filter","res","onNameChange","e","target","value","onSearchChange","newArray","includes","replace","trim","checkActive","friend","handleKeypress","charCode","some","index","findIndex","sorArray","setTimeout","list5","push","pages1","onAdd","onFav","n","list1","originalList1","friendsList1","i","j","k","onDelete","onPageBtn","currentList","onNo","onDeleteSuccess","originalList2","li2","friendsList2","li3","newpage","undefined","map","mapStateToProps","state","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"../css/friendsList.css\";\nimport { connect } from 'react-redux';\nimport { GetFriends } from '../actions/friendsListActions';\n\nconst FriendsList = props => {\n    const [search, setSearch] = useState(\"\");\n    const [name, setName] = useState(\"\");\n    const [currentpage, setCurrentPage] = useState(1);\n    const [list, setList] = useState([]);\n    const [originalList, setOriginalList] = useState();\n    const [noOfPages, setNoOfPages] = useState();\n    const [favourite, setFavourite] = useState(false);\n    const [totalEntities, setTotalEntities] = useState();\n    const [hightlighted, setHighlighted] = useState(\"\");\n    const [message, setMessage] = useState(\"\")\n    const [status, setStatus] = useState(0)\n    const [deleteStatus, setDeleteStatus] = useState(false)\n    const [deleteId, setDeleteId] = useState()\n\n    useEffect(() => {\n        let friendList = [\n            {\n                name: \"Rahul Gupta\",\n                favourite: true\n            },\n            {\n                name: \"Shivangi Sharma\",\n                favourite: false\n            },\n            {\n                name: \"Akash Singh\",\n                favourite: false\n            },\n            {\n                name: \"Kumar madhu\",\n                favourite: false\n            },\n            {\n                name: \"Karthik N\",\n                favourite: true\n            },\n            {\n                name: \"Anand C haveri\",\n                favourite: true\n            },\n            {\n                name: \"Smriti Mandana\",\n                favourite: false\n            },\n            {\n                name: \"Rahul Dravid\",\n                favourite: false\n            },\n            {\n                name: \"Virat Kohli\",\n                favourite: false\n            },\n            {\n                name: \"Sehwag\",\n                favourite: true\n            },\n            {\n                name: \"Mithali Raj\",\n                favourite: true\n            },\n        ]\n        let newList = friendList.sort(function (a, b) {\n            if (a.name.toLowerCase() < b.name.toLowerCase()) { return -1; }\n            if (a.name.toLowerCase() > b.name.toLowerCase()) { return 1; }\n        })\n        if (newList.length) {\n            props.GetFriends(newList)\n            let pages = newList.length % 4;\n            if (pages > 0) {\n                setNoOfPages(Math.trunc(newList.length / 4) + 1)\n            }\n            else {\n                setNoOfPages(Math.trunc(newList.length / 4))\n            }\n            setOriginalList([...newList])\n            setTotalEntities(newList.length)\n            let array = [...newList]\n            let sortedList = array.splice(0, 4);\n            setList(sortedList)\n        }\n    }, [])\n\n    const onPrev = () => {\n        if (currentpage > 1) {\n            let newList = [...originalList]\n            let curPage = currentpage - 1;\n            let sortedList = newList.splice((curPage * 4) - 4, 4);\n            setList(sortedList)\n            setCurrentPage(curPage)\n        }\n        setHighlighted(\"\")\n        setName(\"\")\n    }\n\n    const onNext = () => {\n        if (currentpage < noOfPages) {\n            let newList = [...originalList]\n            let curPage = currentpage + 1;\n            let sortedList = newList.splice((curPage * 4) - 4, 4);\n            setList(sortedList)\n            setCurrentPage(curPage)\n        }\n        setHighlighted(\"\")\n        setName(\"\")\n    }\n\n    const onFavourite = () => {\n        if (favourite == false) {\n            setFavourite(true);\n            let newList = [...props.friendsList]\n            let favourites = newList.filter(res => res.favourite == true)\n            let pages = favourites.length % 4;\n            if (pages > 0) {\n                setNoOfPages(Math.trunc(favourites.length / 4) + 1)\n            }\n            else {\n                setNoOfPages(Math.trunc(favourites.length / 4))\n            }\n            setOriginalList([...favourites])\n            setTotalEntities(favourites.length)\n            let array = [...favourites]\n            let sortedList = array.splice(0, 4);\n            setList(sortedList);\n            setCurrentPage(1)\n            setHighlighted(\"\")\n            setName(\"\")\n            setSearch(\"\")\n        }\n        else {\n            setFavourite(false);\n            let favourites = [...props.friendsList]\n            let pages = favourites.length % 4;\n            if (pages > 0) {\n                setNoOfPages(Math.trunc(favourites.length / 4) + 1)\n            }\n            else {\n                setNoOfPages(Math.trunc(favourites.length / 4))\n            }\n            setOriginalList([...favourites])\n            setTotalEntities(favourites.length)\n            let array = [...favourites]\n            let sortedList = array.splice(0, 4);\n            setList(sortedList);\n            setCurrentPage(1)\n            setHighlighted(\"\")\n            setName(\"\")\n            setSearch(\"\")\n        }\n    }\n\n    const onNameChange = (e) => {\n        setName(e.target.value)\n        setHighlighted(\"\")\n    }\n\n    const onSearchChange = (e) => {\n        setSearch(e.target.value)\n        setName(\"\")\n        setHighlighted(\"\")\n        let list = [...originalList]\n        let newArray = list.filter(res => res.name.toLowerCase().includes(e.target.value.toLowerCase().replace(/\\s+/g, ' ').trim()))\n        let pages = newArray.length % 4;\n        if (pages > 0) {\n            setNoOfPages(Math.trunc(newArray.length / 4) + 1)\n        }\n        else {\n            setNoOfPages(Math.trunc(newArray.length / 4))\n        }\n        let array = [...newArray]\n        setTotalEntities(newArray.length)\n        let sortedList = array.splice(0, 4);\n        setList(sortedList);\n        setCurrentPage(1)\n    }\n\n    const checkActive = (friend) => {\n        return friend.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim()\n    }\n\n    const handleKeypress = e => {\n        if (e.charCode === 13) {\n            if (name != \"\") {\n                let list = [...props.friendsList];\n                if (list.some(res => res.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim())) {\n                    let index = list.findIndex(checkActive);\n                    setFavourite(false)\n                    setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim())\n                    let pages = index % 4;\n                    if (index == 0) {\n                        setCurrentPage(1)\n                        let sorArray = [...list]\n                        let sortedList = sorArray.splice(index, 4);\n                        setList(sortedList)\n                    }\n                    else if (pages > 0) {\n                        setCurrentPage(Math.trunc((index / 4) + 1))\n                        let sortedList = list.splice(((Math.trunc(index / 4) + 1) * 4) - 4, 4);\n                        setList(sortedList)\n                    }\n                    else {\n                        setCurrentPage(Math.trunc(index / 4))\n                        let sortedList = list.splice(((Math.trunc(index / 4) + 1) * 4) - 4, 4);\n                        setList(sortedList)\n                    }\n                    setName(\"\")\n                    setSearch(\"\")\n                    setMessage(\"This name is already in your Friends List.\")\n                    setStatus(1)\n                    setTimeout(() => {\n                        setMessage(\"\")\n                        setStatus(0)\n                    }, 2000)\n                }\n                else {\n                    let list5 = [...props.friendsList];\n                    setFavourite(false)\n                    setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim())\n                    list5.push({\n                        name: name.toLowerCase().replace(/\\s+/g, ' ').trim(),\n                        favourite: false\n                    })\n                    let newList = list5.sort(function (a, b) {\n                        if (a.name.toLowerCase() < b.name.toLowerCase()) { return -1; }\n                        if (a.name.toLowerCase() > b.name.toLowerCase()) { return 1; }\n                    })\n                    if (newList.length) {\n                        props.GetFriends(newList)\n                        setOriginalList([...newList])\n                        let pages1 = newList.length % 4;\n                        if (pages1 > 0) {\n                            setNoOfPages(Math.trunc(newList.length / 4) + 1)\n                        }\n                        else {\n                            setNoOfPages(Math.trunc(newList.length / 4))\n                        }\n                        setTotalEntities(newList.length)\n                        let array = [...newList]\n                        let index = array.findIndex(checkActive);\n                        let pages = index % 4;\n                        if (index == 0) {\n                            setCurrentPage(1)\n                            let sorArray = [...newList]\n                            let sortedList = sorArray.splice(index, 4);\n                            setList(sortedList)\n                        }\n                        else if (pages > 0) {\n                            let sorArray = [...newList]\n                            setCurrentPage(Math.trunc(index / 4) + 1)\n                            let sortedList = sorArray.splice(Math.trunc(index / 4) * 4, 4);\n                            setList(sortedList)\n                        }\n                        else {\n                            setCurrentPage(Math.trunc(index / 4) + 1)\n                            let sorArray = [...newList]\n                            let sortedList = sorArray.splice(index, 4);\n                            setList(sortedList)\n                        }\n                    }\n                    setName(\"\")\n                    setSearch(\"\")\n                    setMessage(\"New contact added to your friends List.\")\n                    setStatus(2)\n                    setTimeout(() => {\n                        setMessage(\"\")\n                        setStatus(0)\n                    }, 2000)\n                }\n            }\n        }\n    };\n\n    const onAdd = () => {\n        if (name != \"\") {\n            let list = [...props.friendsList];\n            if (list.some(res => res.name.toLowerCase() == name.toLowerCase().replace(/\\s+/g, ' ').trim())) {\n                let index = list.findIndex(checkActive);\n                setFavourite(false)\n                setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim())\n                let pages = index % 4;\n                if (index == 0) {\n                    setCurrentPage(1)\n                    let sorArray = [...list]\n                    let sortedList = sorArray.splice(index, 4);\n                    setList(sortedList)\n                }\n                else if (pages > 0) {\n                    setCurrentPage(Math.trunc((index / 4) + 1))\n                    let sortedList = list.splice(((Math.trunc(index / 4) + 1) * 4) - 4, 4);\n                    setList(sortedList)\n                }\n                else {\n                    setCurrentPage(Math.trunc(index / 4))\n                    let sortedList = list.splice(((Math.trunc(index / 4) + 1) * 4) - 4, 4);\n                    setList(sortedList)\n                }\n                setName(\"\")\n                setSearch(\"\")\n                setMessage(\"This name is already in your Friends List.\")\n                setStatus(1)\n                setTimeout(() => {\n                    setMessage(\"\")\n                    setStatus(0)\n                }, 2000)\n            }\n            else {\n                let list5 = [...props.friendsList];\n                setFavourite(false)\n                list5.push({\n                    name: name.toLowerCase().replace(/\\s+/g, ' ').trim(),\n                    favourite: false\n                })\n                setHighlighted(name.toLowerCase().replace(/\\s+/g, ' ').trim())\n                let newList = list5.sort(function (a, b) {\n                    if (a.name.toLowerCase() < b.name.toLowerCase()) { return -1; }\n                    if (a.name.toLowerCase() > b.name.toLowerCase()) { return 1; }\n                })\n                if (newList.length) {\n                    props.GetFriends(newList)\n                    setOriginalList([...newList])\n                    let pages1 = newList.length % 4;\n                        if (pages1 > 0) {\n                            setNoOfPages(Math.trunc(newList.length / 4) + 1)\n                        }\n                        else {\n                            setNoOfPages(Math.trunc(newList.length / 4))\n                        }\n                    setTotalEntities(newList.length)\n                    let array = [...newList]\n                    let index = array.findIndex(checkActive);\n                    let pages = index % 4;\n                    if (index == 0) {\n                        setCurrentPage(1)\n                        let sorArray = [...newList]\n                        let sortedList = sorArray.splice(index, 4);\n                        setList(sortedList)\n                    }\n                    else if (pages > 0) {\n                        let sorArray = [...newList]\n                        setCurrentPage(Math.trunc(index / 4) + 1)\n                        let sortedList = sorArray.splice(Math.trunc(index / 4) * 4, 4);\n                        setList(sortedList)\n                    }\n                    else {\n                        setCurrentPage(Math.trunc(index / 4) + 1)\n                        let sorArray = [...newList]\n                        let sortedList = sorArray.splice(index, 4);\n                        setList(sortedList)\n                    }\n                }\n                setName(\"\")\n                setSearch(\"\")\n                setMessage(\"New contact added to your friends List.\")\n                setStatus(2)\n                setTimeout(() => {\n                    setMessage(\"\")\n                    setStatus(0)\n                }, 2000)\n            }\n        }\n    }\n\n    const onFav = (n) => {\n        let list1 = [...list];\n        let originalList1 = [...originalList];\n        let friendsList1 = [...props.friendsList];\n        for (let i = 0; i < list1.length; i++) {\n            if (list1[i].name.toLowerCase() == n.toLowerCase()) {\n                list1[i].favourite = !list1[i].favourite\n                if (list1[i].favourite == true) {\n                    setMessage(\"Successfully added from your favourites.\")\n                    setStatus(2)\n                    setTimeout(() => {\n                        setMessage(\"\")\n                        setStatus(0)\n                    }, 2000)\n                }\n                else {\n                    setMessage(\"Successfully removed from your favourites.\")\n                    setStatus(1)\n                    setTimeout(() => {\n                        setMessage(\"\")\n                        setStatus(0)\n                    }, 2000)\n                }\n            }\n        }\n        for (let j = 0; j < originalList1.length; j++) {\n            if (originalList1[j].name.toLowerCase() == n.toLowerCase()) {\n                originalList1[j].favourite = !originalList1[j].favourite\n            }\n        }\n        for (let k = 0; k < friendsList1.length; k++) {\n            if (friendsList1[k].name.toLowerCase() == n.toLowerCase()) {\n                friendsList1[k].favourite = !friendsList1[k].favourite\n            }\n        }\n        setHighlighted(\"\")\n        setName(\"\")\n        setList(list1)\n        setOriginalList(originalList1)\n        props.GetFriends(friendsList1)\n    }\n\n    const onDelete = (n) => {\n        setDeleteId(n.toLowerCase())\n        setDeleteStatus(true)\n        setHighlighted(\"\")\n        setName(\"\")\n    }\n\n    const onPageBtn = (n) => {\n        let newList = [...originalList]\n        setCurrentPage(n)\n        let currentList = newList.splice((n * 4) - 4, 4)\n        setList(currentList)\n    }\n\n    const onNo = () => {\n        setDeleteId(\"\")\n        setDeleteStatus(false)\n    }\n\n    const onDeleteSuccess = () => {\n        let n = deleteId;\n        let originalList1 = [...originalList];\n        let friendsList1 = [...props.friendsList];\n        let originalList2 = originalList1.filter(li2 => li2.name.toLowerCase() != n.toLowerCase())\n        let friendsList2 = friendsList1.filter(li3 => li3.name.toLowerCase() != n.toLowerCase())\n        let newList = [...originalList2]\n        setOriginalList(originalList2)\n        props.GetFriends(friendsList2)\n        setTotalEntities(originalList2.length)\n        let pages = originalList2.length % 4;\n        if (pages > 0) {\n            setNoOfPages(Math.trunc(originalList2.length / 4) + 1)\n        }\n        else {\n            setNoOfPages(Math.trunc(originalList2.length / 4))\n        }\n        if (originalList2.length <= (currentpage * 4) - 4) {\n            let newpage = currentpage - 1\n            setCurrentPage(newpage)\n            let sortedList = newList.splice((newpage * 4) - 4, 4);\n            setList(sortedList)\n        }\n        else {\n            let newpage = currentpage;\n            setCurrentPage(newpage)\n            let sortedList = newList.splice((newpage * 4) - 4, 4);\n            setList(sortedList)\n        }\n        setMessage(\"Successfully deleted from your friends List.\")\n        setStatus(2)\n        setTimeout(() => {\n            setMessage(\"\")\n            setStatus(0)\n        }, 2000)\n        setDeleteStatus(false)\n    }\n\n    return (\n        <div className=\"container\">\n            {status != 0 &&\n                <div className={status == 1 ? \"danger alert_message\" : \"success alert_message\"}>\n                    {status == 2 ? <i className=\"fa fa-check-circle\" /> :\n                        <i className=\"fa fa-warning\" />}\n                    <div>{message}</div>\n                </div>}\n            {deleteStatus == true && <div id=\"myModal\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <i className=\"fa fa-warning\" />\n                    <div className=\"head\">Are you sure?</div>\n                    <div className=\"sub_txt\">You want to delete <span>{deleteId}</span> from your friend list.</div>\n                    <div className=\"btn_grp\">\n                        <button className=\"remove_btn\" onClick={() => onNo()}>No</button>\n                        <button className=\"ok_btn\" onClick={() => onDeleteSuccess()}>Delete</button>\n                    </div>\n                </div>\n            </div>}\n            <div className=\"list_main_container\">\n                <div className=\"list_heading\">\n                    <div className=\"header\">Friends List</div>\n                    <div className=\"icons_container\">\n                        <div onClick={() => onFavourite()} className={favourite == false ? \"star_icon\" : \"active star_icon\"}>\n                            <div className={favourite == false ? \"inside_star_icon\" : \"active inside_star_icon\"}></div>\n                        </div>\n                        <span className=\"tooltiptext\">favourites</span>\n                    </div>\n                </div>\n                <div className=\"search_container\">\n                    <i className=\"fa fa-search\"></i>\n                    <input type=\"text\" placeholder=\"Search\" value={search || ''} onChange={onSearchChange} />\n                </div>\n                <div className=\"add_friend_container\">\n                    <input type=\"text\" placeholder=\"Enter your friend name\" value={name || ''} onChange={onNameChange} onKeyPress={handleKeypress} />\n                    <button className=\"add_btn\" onClick={() => onAdd()} disabled={name == \"\" ? true : false}>Add</button>\n                </div>\n                {list != undefined ? list.length ?\n                    <div className=\"list_container\">\n                        {list.map((res, i) =>\n                            <div className={hightlighted.toLowerCase() != res.name.toLowerCase() ? \"friend_container\" : \"newAdded friend_container\"} key={i}>\n                                <div className=\"name_container\">\n                                    <div className=\"name\">{res.name.toLowerCase()}</div>\n                                    <div className=\"tag_line\">is you friend</div>\n                                </div>\n                                <div className=\"action_icons_container\">\n                                    <div className=\"fav_icon_container\" onClick={() => onFav(res.name)}>\n                                        <div className={res.favourite == false ? \"star_icon\" : \"active star_icon\"}>\n                                            <div className={res.favourite == false ? \"inside_star_icon\" : \"active inside_star_icon\"}></div>\n                                        </div>\n                                    </div>\n                                    <div className=\"delete_icon_container\" onClick={() => onDelete(res.name)}>\n                                        <i className=\"fa fa-trash\"></i>\n                                    </div>\n                                </div>\n                            </div>\n                        )}\n                    </div> :\n                    <div className=\"no_friend\">No data to dispaly.</div>:null\n                }\n            </div>\n            {originalList != undefined && originalList.length >3 &&\n                <div className=\"pagination_container\">\n                    <div className=\"pagination_txt\">\n                        Showing {currentpage * 4 - 3} to {currentpage * 4 > totalEntities ? totalEntities : currentpage * 4} of {totalEntities} entries\n                    </div>\n                    <div className=\"pagination_btns\">\n                        <div className={currentpage == 1 ? \"deactive pagination_btn\" : \"pagination_btn\"} onClick={() => onPrev()}>{\"< Prev\"}</div>\n                        {currentpage == 1 ?\n                            <div className=\"pagination_numbers\">\n                                <div className=\"active page_number\" onClick={() => onPageBtn(1)}>1</div>\n                                {noOfPages > 1 && <div className=\"page_number\" onClick={() => onPageBtn(2)}>2</div>}\n                                {noOfPages > 2 && <div className=\"page_number\" onClick={() => onPageBtn(3)}>3</div>}\n                            </div> :\n                            currentpage == noOfPages ?\n                                <div className=\"pagination_numbers\">\n                                    {(noOfPages - 2) > 0 && <div className=\"page_number\" onClick={() => onPageBtn(noOfPages - 2)}>{noOfPages - 2}</div>}\n                                    {(noOfPages - 1) > 0 && <div className=\"page_number\" onClick={() => onPageBtn(noOfPages - 1)}>{noOfPages - 1}</div>}\n                                    <div className=\"active page_number\" onClick={() => onPageBtn(noOfPages)}>{noOfPages}</div>\n                                </div> :\n                                <div className=\"pagination_numbers\">\n                                    <div className=\"page_number\" onClick={() => onPageBtn(currentpage - 1)}>{currentpage - 1}</div>\n                                    <div className=\"active page_number\" onClick={() => onPageBtn(currentpage)}>{currentpage}</div>\n                                    <div className=\"page_number\" onClick={() => onPageBtn(currentpage + 1)}>{currentpage + 1}</div>\n                                </div>}\n                        <div className={noOfPages == currentpage ? \"deactive pagination_btn\" : \"pagination_btn\"} onClick={() => onNext()}>{\"Next >\"}</div>\n                    </div>\n                </div>}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    friendsList: state.friendsList\n})\n\nconst mapDispatchToProps = dispatch => ({\n    GetFriends: (data) => dispatch(GetFriends(data))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FriendsList);\n"]},"metadata":{},"sourceType":"module"}